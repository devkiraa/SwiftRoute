<% locals.pageTitle = typeof title !== 'undefined' ? title : 'User Form' %>
<% const isEditing = typeof userToEdit !== 'undefined' && userToEdit && userToEdit._id; %>

<header class="py-3 px-6 border-b border-gray-200 bg-white shadow-sm flex-shrink-0">
    <div class="flex items-center justify-between">
        <h2 class="text-lg font-semibold text-gray-800"><%= locals.pageTitle %></h2>
        <a href="/users" class="inline-block px-3 py-1.5 border border-gray-300 text-xs font-medium text-gray-700 rounded-md hover:bg-gray-50">
            Back to Users
        </a>
    </div>
</header>

<section class="p-6 flex-1 overflow-y-auto">
    <div class="max-w-lg mx-auto"> <%# Narrower form %>

        <% if (typeof error !== 'undefined' && error) { %>
        <div class="mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
            <strong class="font-bold">Error!</strong>
            <span class="block sm:inline"><%= error %></span>
        </div>
        <% } %>

        <form action="<%= isEditing ? '/users/' + userToEdit._id + '?_method=PUT' : '/users' %>" method="POST" id="user-form" class="bg-white p-6 border rounded-lg shadow-sm space-y-4">

            <div>
                <label for="username" class="block text-sm font-medium text-gray-700 mb-1">Username <span class="text-red-500">*</span></label>
                <input type="text" id="username" name="username" value="<%= isEditing ? userToEdit.username : '' %>" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
            </div>

            <div>
                <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email <span class="text-red-500">*</span></label>
                <input type="email" id="email" name="email" value="<%= isEditing ? userToEdit.email : '' %>" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
            </div>

            <div>
                <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password <%= isEditing ? '(Leave blank to keep current)' : '<span class="text-red-500">*</span>' %></label>
                <input type="password" id="password" name="password" <%= !isEditing ? 'required' : '' %> minlength="6" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                 <% if (isEditing) { %><p class="mt-1 text-xs text-gray-500">Enter a new password only if you want to change it (min 6 chars).</p><% } %>
            </div>

             <div>
                <label for="role" class="block text-sm font-medium text-gray-700 mb-1">Role <span class="text-red-500">*</span></label>
                <select id="role" name="role" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm capitalize">
                    <option value="">-- Select Role --</option>
                     <%# Define available roles (could be passed from route) %>
                     <% const availableRoles = ['warehouse_owner', 'store_owner', 'employee', 'delivery_partner', 'admin']; %>
                     <% availableRoles.forEach(role => { %>
                        <%# Prevent non-admins from creating/assigning admin role %>
                        <% if (role === 'admin' && locals.loggedInUser.role !== 'admin') return; %>
                         <option value="<%= role %>" <%= (isEditing && userToEdit.role === role) ? 'selected' : '' %>>
                            <%= role.replace(/_/g, ' ') %>
                        </option>
                     <% }) %>
                </select>
            </div>

             <%# Store Assignment - Conditionally shown based on selected role %>
             <div id="store-assignment-group" class="hidden"> <%# Initially hidden %>
                 <label for="storeId" class="block text-sm font-medium text-gray-700 mb-1">Assign to Store</label>
                 <select id="storeId" name="storeId" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                     <option value="">-- Select Store (Optional) --</option>
                      <% if (typeof companyStores !== 'undefined' && companyStores) { %>
                          <% companyStores.forEach(store => { %>
                             <option value="<%= store._id %>" <%= (isEditing && userToEdit.storeId?.toString() === store._id.toString()) ? 'selected' : '' %>>
                                <%= store.storeName %>
                            </option>
                          <% }) %>
                      <% } %>
                 </select>
                  <p class="mt-1 text-xs text-gray-500">Required for Store Owner and Employee roles.</p>
             </div>

             <%# Admin Only: Assign Company (if creating or editing non-admin user) %>
             <% if (locals.loggedInUser.role === 'admin') { %>
             <div>
                 <label for="companyId" class="block text-sm font-medium text-gray-700 mb-1">Assign to Company</label>
                 <select id="companyId" name="companyId" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                    <option value="">-- None (Platform Admin/Unaffiliated) --</option>
                    <% if (typeof allCompanies !== 'undefined' && allCompanies) { %>
                        <% allCompanies.forEach(company => { %>
                           <option value="<%= company._id %>" <%= (isEditing && userToEdit.companyId?.toString() === company._id.toString()) ? 'selected' : '' %>>
                              <%= company.companyName %>
                          </option>
                        <% }) %>
                    <% } %>
                 </select>
                 <p class="mt-1 text-xs text-gray-500">Required for non-admin roles.</p>
             </div>
             <% } %>


            <div class="mt-6 pt-4 border-t border-gray-200 flex justify-end">
                 <a href="/users" class="px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 rounded-md hover:bg-gray-50 mr-3">Cancel</a>
                <button type="submit" class="px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    <%= isEditing ? 'Update User' : 'Add User' %>
                </button>
            </div>
        </form>
    </div>
</section>

<script>
    // Show/hide store assignment based on selected role
    const roleSelect = document.getElementById('role');
    const storeGroup = document.getElementById('store-assignment-group');
    const storeSelect = document.getElementById('storeId');
    const companySelect = document.getElementById('companyId'); // Needed for admin logic

    const rolesRequiringStore = ['store_owner', 'employee'];
    const rolesRequiringCompany = ['warehouse_owner', 'store_owner', 'employee', 'delivery_partner'];

    function toggleStoreAssignment() {
        const selectedRole = roleSelect.value;
        if (rolesRequiringStore.includes(selectedRole)) {
            storeGroup.classList.remove('hidden');
            storeSelect.required = true; // Make required if role needs it
        } else {
            storeGroup.classList.add('hidden');
            storeSelect.required = false;
            storeSelect.value = ''; // Clear selection if hidden
        }
        // Optional: Admin handling for company requirement
        if (companySelect) { // Check if admin company dropdown exists
             if (!selectedRole || rolesRequiringCompany.includes(selectedRole)) {
                 companySelect.required = true;
             } else { // Admin role doesn't require company
                 companySelect.required = false;
             }
        }
    }

    roleSelect.addEventListener('change', toggleStoreAssignment);
    // Run on page load in case editing
    document.addEventListener('DOMContentLoaded', toggleStoreAssignment);
</script>