<% locals.pageTitle = typeof title !== 'undefined' ? title : 'Item Form' %>
<% const isEditing = typeof item !== 'undefined' && item && item._id; %>

<header class="py-3 px-6 border-b border-gray-200 bg-white shadow-sm flex-shrink-0">
    <div class="flex items-center justify-between">
        <h2 class="text-lg font-semibold text-gray-800"><%= locals.pageTitle %></h2>
        <a href="/items" class="inline-block px-3 py-1.5 border border-gray-300 text-xs font-medium text-gray-700 rounded-md hover:bg-gray-50">
            Cancel
        </a>
    </div>
</header>

<section class="p-6 flex-1 overflow-y-auto">
    <div class="max-w-2xl mx-auto"> <%# Single column form %>

        <% if (typeof error !== 'undefined' && error) { %>
            <div class="mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                <strong class="font-bold">Error!</strong> <span class="block sm:inline"><%= error %></span>
            </div>
        <% } %>

        <form action="<%= isEditing ? '/items/' + item._id + '?_method=PUT' : '/items' %>" method="POST" id="item-form" class="bg-white p-6 border rounded-lg shadow-sm space-y-4">
             <%# Add method override later if using PUT %>

            <div>
                <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Item Name <span class="text-red-500">*</span></label>
                <input type="text" id="name" name="name" value="<%= item.name || '' %>" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
            </div>

             <div>
                <label for="sku" class="block text-sm font-medium text-gray-700 mb-1">SKU (Unique Identifier) <span class="text-red-500">*</span></label>
                <input type="text" id="sku" name="sku" value="<%= item.sku || '' %>" required <%= isEditing ? 'readonly' : '' %> class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm <%= isEditing ? 'bg-gray-100 cursor-not-allowed' : '' %>">
                <% if (isEditing) { %><p class="mt-1 text-xs text-gray-500">SKU cannot be changed after creation.</p><% } %>
                <%# Note: Schema enforces global uniqueness. Consider company-level unique index. %>
            </div>

             <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                 <div>
                    <label for="quantity" class="block text-sm font-medium text-gray-700 mb-1">Initial Quantity <span class="text-red-500">*</span></label>
                    <input type="number" id="quantity" name="quantity" value="<%= item.quantity || '0' %>" required min="0" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                     <% if (isEditing) { %><p class="mt-1 text-xs text-gray-500">Use stock adjustments for changes.</p><% } %>
                 </div>
                 <div>
                    <label for="price" class="block text-sm font-medium text-gray-700 mb-1">Price per Unit <span class="text-red-500">*</span></label>
                    <input type="number" id="price" name="price" value="<%= item.price || '0.00' %>" required min="0" step="0.01" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                </div>
             </div>

             <div>
                <label for="warehouseId" class="block text-sm font-medium text-gray-700 mb-1">Warehouse <span class="text-red-500">*</span></label>
                <select id="warehouseId" name="warehouseId" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm <%= isEditing ? 'bg-gray-100 cursor-not-allowed' : '' %>" <%= isEditing ? 'disabled' : '' %>>
                    <option value="">-- Select Warehouse --</option>
                    <% // Only loop if warehouses exist and are passed %>
                    <% if (typeof availableWarehouses !== 'undefined' && availableWarehouses && availableWarehouses.length > 0) { %>
                        <% availableWarehouses.forEach(wh => { %>
                            <option value="<%= wh._id %>" <%= (typeof item !== 'undefined' && item.warehouseId == wh._id) ? 'selected' : '' %>>
                                <%= wh.name %>
                            </option>
                        <% }) %>
                    <% } %>
                </select>
            
                <% // Conditionally show helper text AFTER the select dropdown %>
                <% if (isEditing) { %>
                    <p class="mt-1 text-xs text-gray-500">Cannot change warehouse after creation.</p>
                <% } else if (typeof availableWarehouses === 'undefined' || !availableWarehouses || availableWarehouses.length === 0) { %>
                    <%# Show error only if NOT editing AND no warehouses were available %>
                    <p class="mt-1 text-xs text-red-600">No warehouses available for your company. <a href="/warehouses/new" class="underline font-medium">Add one first</a>.</p>
                <% } %>
            </div>

             <div>
                <label for="description" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                <textarea id="description" name="description" rows="3" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"><%= item.description || '' %></textarea>
             </div>

             <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 items-center">
                 <div class="relative flex items-start">
                    <div class="flex items-center h-5">
                      <input id="perishable" name="perishable" type="checkbox" <%= (item.perishable) ? 'checked' : '' %> class="focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded">
                    </div>
                    <div class="ml-3 text-sm">
                      <label for="perishable" class="font-medium text-gray-700">Perishable Item?</label>
                    </div>
                  </div>

                <div id="expiryDateGroup" class="<%= (item.perishable) ? '' : 'hidden' %>"> <%# Initially hidden if not perishable %>
                    <label for="expiryDate" class="block text-sm font-medium text-gray-700 mb-1">Expiry Date</label>
                    <input type="date" id="expiryDate" name="expiryDate"
                           value="<%= item.expiryDate ? new Date(item.expiryDate).toISOString().split('T')[0] : '' %>"
                           class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                </div>
            </div>


            <div class="mt-6 pt-4 border-t border-gray-200 flex justify-end">
                 <a href="/items" class="px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 rounded-md hover:bg-gray-50 mr-3">Cancel</a>
                <button type="submit" class="px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    <%= isEditing ? 'Update Item' : 'Add Item' %>
                </button>
            </div>
        </form>
    </div>
</section>

<script>
    // Simple script to show/hide expiry date based on perishable checkbox
    const perishableCheckbox = document.getElementById('perishable');
    const expiryDateGroup = document.getElementById('expiryDateGroup');

    function toggleExpiry() {
        if (perishableCheckbox.checked) {
            expiryDateGroup.classList.remove('hidden');
        } else {
            expiryDateGroup.classList.add('hidden');
             // Optional: Clear expiry date value when unchecked
             // document.getElementById('expiryDate').value = '';
        }
    }

    perishableCheckbox.addEventListener('change', toggleExpiry);
    // Run on page load as well
    // toggleExpiry(); // This was causing expiryDateGroup to be null initially
    document.addEventListener('DOMContentLoaded', toggleExpiry); // Run after DOM is ready
</script>