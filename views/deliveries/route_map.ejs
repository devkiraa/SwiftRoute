<% locals.pageTitle = typeof title !== 'undefined' ? title : 'Optimized Delivery Route' %>

<header class="py-3 px-6 border-b border-gray-200 bg-white shadow-sm flex-shrink-0">
  <div class="flex items-center justify-between">
    <h2 class="text-lg font-semibold text-gray-800"><%= locals.pageTitle %></h2>
    <a href="/deliveries/my" class="inline-block px-3 py-1.5 border border-gray-300 text-xs font-medium text-gray-700 rounded-md hover:bg-gray-50">
      Back to List
    </a>
  </div>
</header>

<% if (errorMsg) { %>
  <div class="m-6 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative max-w-4xl mx-auto" role="alert">
    <strong class="font-bold">Routing Error!</strong>
    <span class="block sm:inline"><%= errorMsg %></span>
  </div>
<% } %>

<section class="p-6 flex-1 grid grid-cols-1 lg:grid-cols-3 gap-6 overflow-hidden">
  <!-- Map Container -->
  <div id="route-map" class="lg:col-span-2 h-[calc(100vh-150px)] border rounded-lg bg-gray-200 relative">
    <div id="map-loader" class="absolute inset-0 bg-gray-200 bg-opacity-75 flex items-center justify-center z-10">
      <!-- loader SVG -->
    </div>
  </div>

  <!-- Route Legs Sidebar -->
  <div class="lg:col-span-1 h-[calc(100vh-150px)] overflow-y-auto bg-white border rounded-lg shadow-sm p-4 space-y-3">
    <h3 class="text-base font-semibold text-gray-700 border-b pb-2 mb-3">Optimized Route Legs</h3>

    <% if (routeLegs && routeLegs.length) { %>
      <% routeLegs.forEach((leg, idx) => { %>
        <div class="border p-3 rounded-md bg-gray-50">
          <p class="text-xs text-gray-500">Distance: <%= (leg.distance/1000).toFixed(2) %> km | Duration: <%= Math.ceil(leg.duration/60) %> min</p>
          <p class="font-semibold text-sm mt-1">From: <%- leg.startName %></p>
          <p class="text-xs text-gray-600"><%- leg.startAddress %></p>
          <p class="font-semibold text-sm mt-2">To: <%- leg.endName %></p>
          <p class="text-xs text-gray-600"><%- leg.endAddress %></p>

          <button
            class="start-route-btn mt-3 w-full bg-blue-600 text-white py-1 rounded-md text-xs hover:bg-blue-700"
            data-start='<%= JSON.stringify(leg.startCoords) %>'
            data-end='<%= JSON.stringify(leg.endCoords) %>'
          >
            Start in Map
          </button>
        </div>
      <% }) %>
    <% } else { %>
      <p class="text-sm text-gray-500 text-center py-4">No route legs available.</p>
    <% } %>
  </div>
</section>

<!-- Google Maps API -->
<script src="https://maps.googleapis.com/maps/api/js?key=<%= googleMapsApiKey %>&libraries=geometry,marker&callback=initRouteMap" async defer></script>

<script>
  let map, legPolyline;
  const loader = document.getElementById('map-loader');

  function initRouteMap() {
    map = new google.maps.Map(document.getElementById('route-map'), {
      center: { lat: 12.9716, lng: 77.5946 },
      zoom: 12,
      mapId: 'SWIFTROUTE_DELIVERY_MAP'
    });

    loader.style.display = 'none';

    document.querySelectorAll('.start-route-btn').forEach(btn => {
      btn.addEventListener('click', () => loadLeg(btn));
    });
  }

  async function loadLeg(btn) {
    if (legPolyline) legPolyline.setMap(null);
    loader.style.display = 'flex';

    const start = JSON.parse(btn.getAttribute('data-start'));
    const end = JSON.parse(btn.getAttribute('data-end'));

    try {
      const res = await fetch(
        `https://router.project-osrm.org/route/v1/driving/${start.lng},${start.lat};${end.lng},${end.lat}?overview=full&geometries=polyline`
      );
      const data = await res.json();
      if (data.code !== 'Ok') throw new Error(data.message || data.code);

      const path = google.maps.geometry.encoding.decodePath(data.routes[0].geometry);
      legPolyline = new google.maps.Polyline({ path, map, strokeWeight: 6, strokeOpacity: 0.8 });

      const bounds = new google.maps.LatLngBounds();
      path.forEach(p => bounds.extend(p));
      map.fitBounds(bounds);
    } catch (e) {
      console.error('Error fetching leg route:', e);
      alert('Unable to load route.');
    } finally {
      loader.style.display = 'none';
    }
  }
</script>
