<%# views/deliveries/my_deliveries.ejs %>
<% locals.pageTitle = typeof title !== 'undefined' ? title : 'My Deliveries' %>

<header class="py-3 px-6 border-b border-gray-200 bg-white shadow-sm flex-shrink-0">
    <div class="flex items-center justify-between">
        <h2 class="text-lg font-semibold text-gray-800"><%= locals.pageTitle %></h2>
        <%# Add any header actions if needed %>
        <div></div> 
    </div>
</header>

<section class="p-6 flex-1 overflow-y-auto space-y-6">
    <%# Display Messages from Query Parameters %>
    <% if (typeof error_msg === 'string' && error_msg.length > 0) { %>
        <div class="mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md relative max-w-4xl mx-auto" role="alert">
            <strong class="font-bold">Error:</strong> 
            <span class="block sm:inline"><%= decodeURIComponent(error_msg.replace(/\+/g, ' ')) %></span>
            <button type="button" class="absolute top-0 bottom-0 right-0 px-4 py-3" onclick="this.parentElement.remove();">
                <span class="text-red-500 text-xl leading-none">&times;</span>
            </button>
        </div>
    <% } %>
    <% if (typeof success_msg === 'string' && success_msg.length > 0) { %>
        <div class="mb-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-md relative max-w-4xl mx-auto" role="alert">
            <strong class="font-bold">Success:</strong> 
            <span class="block sm:inline"><%= decodeURIComponent(success_msg.replace(/\+/g, ' ')) %></span>
            <button type="button" class="absolute top-0 bottom-0 right-0 px-4 py-3" onclick="this.parentElement.remove();">
                <span class="text-green-500 text-xl leading-none">&times;</span>
            </button>
        </div>
    <% } %>

    <div class="bg-white border rounded-lg shadow-sm">
        <div class="px-4 py-3 border-b bg-gray-50 rounded-t-lg">
            <h3 class="text-base font-semibold text-gray-700">Deliveries In Progress (<%= ordersInProgress ? ordersInProgress.length : 0 %>)</h3>
            <p class="text-xs text-gray-500">Orders currently marked as 'Shipped'. Mark delivered and record payment upon completion.</p>
        </div>
        <div class="overflow-x-auto">
            <table class="w-full text-left">
                 <thead class="bg-gray-50 border-b text-xs uppercase text-gray-500 tracking-wider">
                    <tr>
                        <th class="px-4 py-2 font-medium">Order ID</th>
                        <th class="px-4 py-2 font-medium">Store</th>
                        <th class="px-4 py-2 font-medium">Recipient</th>
                        <th class="px-4 py-2 font-medium">Address</th>
                        <th class="px-4 py-2 font-medium text-center">Amount Due</th>
                        <th class="px-4 py-2 font-medium text-center">Payment</th> <%# <-- NEW COLUMN %>
                        <th class="px-4 py-2 font-medium text-center">Actions</th>
                    </tr>
                </thead>
                <tbody class="divide-y text-sm text-gray-700">
                    <% if (typeof ordersInProgress !== 'undefined' && ordersInProgress.length > 0) { %>
                        <% ordersInProgress.forEach(order => { %>
                            <tr class="hover:bg-gray-50">
                                <td class="px-4 py-3 font-mono text-xs">...<%= order._id.toString().slice(-8) %></td>
                                <td class="px-4 py-3"><%= order.storeId?.storeName || 'N/A' %></td>
                                <td class="px-4 py-3"><%= order.customerName || 'N/A' %></td>
                                <td class="px-4 py-3 text-xs"><%= order.shippingAddress %></td>
                                <% const amountDue = order.totalAmount - (order.amountCollected || 0); %>
                                <td class="px-4 py-3 whitespace-nowrap text-right font-medium <%= amountDue > 0 ? 'text-red-600' : 'text-green-600' %>">
                                     ₹<%= amountDue.toFixed(2) %>
                                </td>
                                <%# --- NEW: Payment Status Column --- %>
                                <td class="px-4 py-3 text-center">
                                     <% 
                                        let paymentStatusClass = 'bg-gray-100 text-gray-800'; 
                                        const paymentStatusText = order.paymentStatus || 'pending'; 
                                        switch (paymentStatusText) { 
                                             case 'pending': paymentStatusClass = 'bg-yellow-100 text-yellow-800'; break; 
                                             case 'paid': paymentStatusClass = 'bg-green-100 text-green-800'; break; 
                                             case 'partial': paymentStatusClass = 'bg-orange-100 text-orange-800'; break; 
                                             case 'credit': paymentStatusClass = 'bg-blue-100 text-blue-800'; break; 
                                        } 
                                     %>
                                     <span class="inline-block px-2 py-1 text-xs font-medium rounded-full capitalize <%= paymentStatusClass %>">
                                         <%= paymentStatusText %>
                                     </span>
                                </td>
                                <%# --- END: Payment Status Column --- %>
                                <td class="px-4 py-3 whitespace-nowrap text-center space-x-2">
                                    <a href="/orders/<%= order._id %>" class="text-blue-600 hover:underline text-xs font-medium" title="View Order Details">Details</a>
                                    
                                    <%# Show Delivered Button only if status is 'shipped' %>
                                    <% if (order.orderStatus === 'shipped') { %>
                                    <form action="/deliveries/<%= order._id %>/delivered" method="POST" class="inline" onsubmit="return confirm('Mark order as delivered?');"> 
                                        <button type="submit" class="text-green-600 hover:underline text-xs font-medium" title="Mark as Delivered">Delivered</button> 
                                    </form>
                                    <% } %>

                                    <%# Show Record Payment Button if not fully paid OR on credit %>
                                    <% if (order.paymentStatus !== 'paid' || order.paymentMethod === 'credit') { %>
                                        <button onclick="openPaymentModal('<%= order._id %>', '<%= order.totalAmount %>', '<%= String(order.customerName || order.storeId?.storeName || '').replace(/'/g, '\\\'').replace(/"/g, '&quot;') %>', '<%= order.paymentStatus %>', '<%= order.paymentMethod %>', '<%= order.amountCollected || 0 %>', '<%= escape(order.paymentNotes || '') %>')" 
                                                class="text-purple-600 hover:underline text-xs font-medium" title="Record Payment">
                                            Payment
                                        </button>
                                    <% } else if (order.paymentStatus === 'paid') { %>
                                         <span class="text-xs text-green-600 font-medium" title="Payment Completed">✓ Paid</span>
                                    <% } %>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr><td colspan="7" class="text-center py-6 text-gray-500">No deliveries currently in progress.</td></tr> <%# Adjusted colspan %>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>
    </section>
<div id="payment-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
    <div class="bg-white rounded-lg shadow-xl w-full max-w-md p-6">
        <form id="payment-form" action="" method="POST"> <%# Action set by JS %>
            <div class="flex justify-between items-center mb-4">
                <h4 class="text-lg font-semibold text-gray-800">Record Payment for Order <span id="payment-modal-order-id" class="font-mono text-sm"></span></h4>
                <button type="button" id="payment-modal-close" class="text-gray-500 hover:text-gray-800 text-2xl leading-none">&times;</button>
            </div>
            
            <p class="text-sm mb-1">Recipient: <span id="payment-modal-recipient" class="font-medium"></span></p>
            <p class="text-sm mb-4">Total Amount Due: <span id="payment-modal-amount-due" class="font-semibold"></span></p>
            
            <div class="space-y-4">
                 <div>
                    <label for="paymentMethod" class="block text-sm font-medium text-gray-700 mb-1">Payment Method <span class="text-red-500">*</span></label>
                    <select id="paymentMethod" name="paymentMethod" required class="mt-1 block w-full px-3 py-2 border border-gray-300 bg-white rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        <option value="">-- Select Method --</option>
                        <option value="cash">Cash</option>
                        <option value="upi">UPI</option>
                        <option value="cheque">Cheque</option>
                        <option value="card">Card</option>
                        <option value="credit">Credit (Pay Later)</option>
                        <option value="other">Other</option>
                    </select>
                </div>

                <%# Conditionally show UPI ID - requires fetching company upiId %>
                 <div id="upi-info-display" class="hidden text-sm p-2 bg-indigo-50 border border-indigo-200 rounded">
                     <p class="font-medium text-indigo-800">Company UPI ID:</p>
                     <p class="text-indigo-700" id="company-upi-id">(Needs backend integration)</p> <%# TODO: Populate this %>
                     <p class="text-xs text-indigo-500">Share this with the customer for UPI payment.</p>
                 </div>

                 <div>
                    <label for="amountCollected" class="block text-sm font-medium text-gray-700 mb-1">Amount Collected (₹) <span class="text-red-500">*</span></label>
                    <input type="number" id="amountCollected" name="amountCollected" required min="0" step="0.01" placeholder="Enter amount received"
                           class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                </div>

                 <div>
                    <label for="paymentNotes" class="block text-sm font-medium text-gray-700 mb-1">Payment Notes (Optional)</label>
                    <textarea id="paymentNotes" name="paymentNotes" rows="2" placeholder="e.g., Cheque no., UPI ID, Transaction Ref..."
                              class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm sm:text-sm"></textarea>
                </div>
            </div>

            <div class="mt-6 pt-4 border-t border-gray-200 flex justify-end space-x-3">
                <button type="button" id="payment-modal-cancel" class="px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 rounded-md hover:bg-gray-50">Cancel</button>
                <button type="submit" class="px-4 py-2 bg-green-600 text-white text-sm font-medium rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                    Record Payment
                </button>
            </div>
        </form>
    </div>
</div>

<script>
// ****** NEW SCRIPT FOR PAYMENT MODAL ******
const paymentModal = document.getElementById('payment-modal');
const paymentModalCloseBtn = document.getElementById('payment-modal-close');
const paymentModalCancelBtn = document.getElementById('payment-modal-cancel');
const paymentModalForm = document.getElementById('payment-form');
const paymentModalOrderId = document.getElementById('payment-modal-order-id');
const paymentModalRecipient = document.getElementById('payment-modal-recipient');
const paymentModalAmountDue = document.getElementById('payment-modal-amount-due');
const paymentMethodSelect = document.getElementById('paymentMethod');
const upiInfoDiv = document.getElementById('upi-info-display');
const companyUpiIdSpan = document.getElementById('company-upi-id'); // Span to display UPI ID
const amountCollectedInput = document.getElementById('amountCollected');
const paymentNotesInput = document.getElementById('paymentNotes');

// TODO: Get company UPI ID from backend (passed via EJS maybe?)
// Example: Assuming it's available in a JS variable `companyUpiIdFromServer`
const companyUpiIdFromServer = "<%= locals.companyDetails?.upiId || 'N/A' %>"; // Get company UPI from locals

function openPaymentModal(orderId, totalAmount, recipientName, currentStatus, currentMethod, currentCollected, currentNotes) {
    if (!paymentModal) return;
    
    const amountDue = parseFloat(totalAmount) - parseFloat(currentCollected);
    
    // Set form action URL
    paymentModalForm.action = `/deliveries/order/${orderId}/record-payment`;
    
    // Populate modal fields
    paymentModalOrderId.textContent = `...${orderId.slice(-8)}`;
    paymentModalRecipient.textContent = recipientName || 'N/A';
    paymentModalAmountDue.textContent = `₹${amountDue.toFixed(2)}`;
    
    // Pre-fill form inputs only if not already paid (unless allowing updates?)
    if (currentStatus !== 'paid') {
        paymentMethodSelect.value = currentMethod !== 'unknown' ? currentMethod : '';
        amountCollectedInput.value = amountDue > 0 ? amountDue.toFixed(2) : '0.00'; // Default to amount due
        paymentNotesInput.value = decodeURIComponent(currentNotes || ''); // Decode notes from EJS
    } else {
        // Optionally disable form if already paid, or just show info
        paymentMethodSelect.value = currentMethod;
        amountCollectedInput.value = parseFloat(currentCollected).toFixed(2);
        paymentNotesInput.value = decodeURIComponent(currentNotes || '');
        // Maybe disable inputs?
    }
    
    // Handle UPI display logic
    toggleUpiDisplay(); 
    paymentMethodSelect.addEventListener('change', toggleUpiDisplay);
    
    paymentModal.classList.remove('hidden');
    paymentModal.classList.add('flex');
}

function toggleUpiDisplay() {
    if (paymentMethodSelect.value === 'upi') {
        if (companyUpiIdFromServer && companyUpiIdFromServer !== 'N/A') {
            companyUpiIdSpan.textContent = companyUpiIdFromServer;
             upiInfoDiv.classList.remove('hidden');
        } else {
             companyUpiIdSpan.textContent = '(Company UPI ID not set)';
             upiInfoDiv.classList.remove('hidden');
        }
    } else {
        upiInfoDiv.classList.add('hidden');
    }
}

function closePaymentModal() {
    if (!paymentModal) return;
    paymentMethodSelect.removeEventListener('change', toggleUpiDisplay); // Clean up listener
    paymentModal.classList.add('hidden');
    paymentModal.classList.remove('flex');
    paymentModalForm.reset(); // Reset form fields
}

// Attach close event listeners
paymentModalCloseBtn.addEventListener('click', closePaymentModal);
paymentModalCancelBtn.addEventListener('click', closePaymentModal);
paymentModal.addEventListener('click', (e) => { 
    if (e.target === paymentModal) { // Close if clicking outside the modal content
        closePaymentModal();
    }
});

// Note: The initial call to openPaymentModal happens from the button's onclick attribute in the EJS table.
// </script>